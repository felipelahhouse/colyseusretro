# üß™ Script de Teste - Corre√ß√£o Loading Infinito
# Este script verifica se as corre√ß√µes foram aplicadas corretamente

Write-Host "============================================" -ForegroundColor Cyan
Write-Host "üß™ TESTE: Corre√ß√£o Loading Infinito" -ForegroundColor Cyan
Write-Host "============================================" -ForegroundColor Cyan
Write-Host ""

# Verifica se os arquivos existem
$publicFile = "c:\Users\peternoia\Desktop\playnowemulator-firebase\public\universal-player.html"
$distFile = "c:\Users\peternoia\Desktop\playnowemulator-firebase\dist\universal-player.html"

Write-Host "üìÅ Verificando arquivos..." -ForegroundColor Yellow

if (Test-Path $publicFile) {
    Write-Host "‚úÖ public/universal-player.html encontrado" -ForegroundColor Green
} else {
    Write-Host "‚ùå public/universal-player.html N√ÉO encontrado" -ForegroundColor Red
    exit 1
}

if (Test-Path $distFile) {
    Write-Host "‚úÖ dist/universal-player.html encontrado" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  dist/universal-player.html N√ÉO encontrado (ser√° criado no build)" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üîç Verificando corre√ß√µes implementadas..." -ForegroundColor Yellow

# Verifica se as corre√ß√µes est√£o presentes
$content = Get-Content $publicFile -Raw

$checks = @(
    @{
        Name = "Timeout de CDN (15s)"
        Pattern = "15000.*15 segundos"
        Found = $content -match "15000.*15 segundos"
    },
    @{
        Name = "Aviso intermedi√°rio de loading"
        Pattern = "ainda carregando"
        Found = $content -match "ainda carregando"
    },
    @{
        Name = "Logs detalhados de diagn√≥stico"
        Pattern = "Starting emulator initialization"
        Found = $content -match "Starting emulator initialization"
    },
    @{
        Name = "Contador de tentativas CDN"
        Pattern = "Attempt.*CDN_SOURCES.length"
        Found = $content -match "Attempt.*CDN_SOURCES.length"
    },
    @{
        Name = "Mensagem de erro melhorada"
        Pattern = "Verifique sua conex√£o com a internet"
        Found = $content -match "Verifique sua conex√£o com a internet"
    }
)

$allPassed = $true
foreach ($check in $checks) {
    if ($check.Found) {
        Write-Host "‚úÖ $($check.Name)" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $($check.Name)" -ForegroundColor Red
        $allPassed = $false
    }
}

Write-Host ""
Write-Host "============================================" -ForegroundColor Cyan

if ($allPassed) {
    Write-Host "‚úÖ TODAS AS CORRE√á√ïES FORAM APLICADAS!" -ForegroundColor Green
    Write-Host ""
    Write-Host "üìã Pr√≥ximos passos:" -ForegroundColor Yellow
    Write-Host "1. Execute: npm run dev" -ForegroundColor White
    Write-Host "2. Abra: http://localhost:5173" -ForegroundColor White
    Write-Host "3. Abra o Console (F12)" -ForegroundColor White
    Write-Host "4. Teste um jogo SNES" -ForegroundColor White
    Write-Host "5. Observe os logs no console" -ForegroundColor White
    Write-Host ""
    Write-Host "üìñ Leia: CORRECAO_LOADING_INFINITO.md para mais detalhes" -ForegroundColor Cyan
} else {
    Write-Host "‚ö†Ô∏è  ALGUMAS CORRE√á√ïES PODEM ESTAR FALTANDO" -ForegroundColor Yellow
    Write-Host "Verifique o arquivo manualmente" -ForegroundColor Yellow
}

Write-Host "============================================" -ForegroundColor Cyan
Write-Host ""

# Pergunta se quer iniciar o servidor de desenvolvimento
$response = Read-Host "Deseja iniciar o servidor de desenvolvimento agora? (S/N)"
if ($response -eq "S" -or $response -eq "s") {
    Write-Host ""
    Write-Host "üöÄ Iniciando servidor de desenvolvimento..." -ForegroundColor Green
    Write-Host "Pressione Ctrl+C para parar" -ForegroundColor Yellow
    Write-Host ""
    npm run dev
}